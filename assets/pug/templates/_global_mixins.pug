mixin script_cdn(array)
	each item in array
		script(src=item.link)

mixin head(array)
	meta(charset='UTF-8')
	title!=array.title_inner
	meta(name="viewport", content="width=device-width")
	meta(name="SKYPE_TOOLBAR", content="SKYPE_TOOLBAR_PARSER_COMPATIBLE")
	meta(name="apple-mobile-web-app-capable", content="yes")
	meta(name="format-detection", content="telephone=no")
	link(type="image/x-icon", rel="shortcut icon", href="favicon.ico")
	
	if production
		link(rel="shortcut icon", href="favicon.ico", type="image/x-icon")
		link(rel="apple-touch-icon", href="apple-touch-icon.png")
		link(rel="apple-touch-icon", sizes="57x57", href="apple-touch-icon-57x57.png")
		link(rel="apple-touch-icon", sizes="72x72", href="apple-touch-icon-72x72.png")
		link(rel="apple-touch-icon", sizes="76x76", href="apple-touch-icon-76x76.png")
		link(rel="apple-touch-icon", sizes="114x114", href="apple-touch-icon-114x114.png")
		link(rel="apple-touch-icon", sizes="120x120", href="apple-touch-icon-120x120.png")
		link(rel="apple-touch-icon", sizes="144x144", href="apple-touch-icon-144x144.png")
		link(rel="apple-touch-icon", sizes="152x152", href="apple-touch-icon-152x152.png")
	link(rel="stylesheet" media="all" href="styles/main_global.css")

mixin scripts
	if jQuery
		|<script src="//ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
		|<script>window.jQuery || document.write('<script src="js/jquery-3.2.1.min.js"><\/script>')</script>
	if jQueryUI
		|<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
		|<script>window.jQuery.ui || document.write('<script src="js/jquery-ui.min.js"><\/script>')</script>
	+script_cdn([
	{link:'//cdnjs.cloudflare.com/ajax/libs/gsap/1.19.1/TweenMax.min.js'},
	{link:'//cdn.glivera.com/dev_functions.js'}
	])
	script(src="js/all.js")
	script(src="js/select2.min.js")
	script(src="js/slick.min.js")
	script(src="js/jquery.magnific-popup.min.js")
	script(src='js/main.js')

//- form element
mixin form_element(config)
	if !config.id
		- config.id = config.title.replace(/\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')
	else
		- config.id = config.id.replace(/\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')

	- label_attributes = {'for': config.id}
	- main_attributes = {'type': config.type, 'id': config.id, 'class': config.add_class, 'placeholder': config.placeholder, 'name': config.name, 'value': config.value}
	- logic_attributes = {'checked': config.checked, 'required': config.required, 'disabled': config.disabled, 'readonly': config.readonly, 'hidden': config.hidden}
	- additional_attributes = config.additional
	- additional_classes = {}

	if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel' || config.type === 'textarea' || config.type === 'select' || config.type === 'file'
		- logic_attributes.checked = false
		- additional_classes = {'class': config.class_array.block_class_mod}
		dl.form_cell&attributes(additional_classes)

			- additional_classes = {'class': config.class_array.class_mod}
			dt.form_cell_title&attributes(additional_classes)
				label&attributes(label_attributes)= config.title

			dd.form_field_wrap&attributes(additional_classes)

				if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel'
					- additional_classes = {'class': config.class_array.elem_class}
					input.form_field&attributes(main_attributes)&attributes(logic_attributes)&attributes(additional_classes)&attributes(additional_attributes)
					block

				if config.type === 'textarea'
					textarea.form_field&attributes(main_attributes)&attributes(logic_attributes)&attributes(additional_attributes)
					block

				if config.type === 'file'
					input.form_field&attributes(main_attributes)&attributes(logic_attributes)&attributes(additional_attributes)
					.form_field_file_field
						span.form_field_file_text= config.title
						span.form_field_file_btn Choose File

				if config.type === 'select'
					- additional_classes = {'class': config.class_array.elem_class}
					select.form_field(data-placeholder= config.placeholder)&attributes(additional_attributes)&attributes(additional_classes)
						each option in config.options
							option(value=option)= option
					block

	if config.type === 'checkbox' || config.type === 'radio'
		- additional_classes = {'class': config.class_array.block_class_mod}
		label.radio_check&attributes(additional_classes)
			input.radio_check_input&attributes(main_attributes)&attributes(logic_attributes)&attributes(additional_attributes)
			- additional_classes = {'class': config.class_array.class_mod}
			span.radio_check_text&attributes(additional_classes)= config.title
//- form element###

//- works
mixin loop_while(counter)
	- i=0;
	while i < counter
		-i++;
		block

//- works
mixin loop_while_sub(counter)
	- j = 0;
		while j < counter
			-j++;
			block

//- works
mixin breadcrumbs(array,add_class)
	- add_class = add_class || ''
	ul.breadcrumbs_list(class=add_class)
		each crumb, index in array
			li.breadcrumbs_item
				if (index == array.length - 1)
					a.breadcrumbs_link.current_mod=crumb
				else
					a.breadcrumbs_link(href="#")=crumb

mixin main_menu(menuArray)
	ul.main_menu_list(class="#{menuArray.mod}")
		each item in menuArray.items
			if item.active
				li.main_menu_item.active_mod(class="#{menuArray.mod}")
					a.main_menu_link(href="#" class="#{menuArray.mod}") #{item.title}
			else
				li.main_menu_item(class="#{menuArray.mod}")
					a.main_menu_link(href="#" class="#{menuArray.mod}") #{item.title}

//- works
mixin social(items, mod)
	ul.social_list(class= mod)
		each item in items
			li.social_item(class= mod)
				a.social_link(href='#' class=`${item}_mod ${mod}`)= item

//- works
mixin icon(name, mod)
	- mod = mod || ''
	svg(class=`icon icon-${name} ${mod}`)
		use(xlink:href=`i/sprite/sprite.svg#${name}`)

mixin pagination(config)
	- config.mod = config.mod || ''
	- config.active = config.active || 1
	.pag_block(class='#{config.mod}')
		ul.pag_list(class="#{config.mod}")
			if config.arrows
				li.pag_item.prev_mod(class="#{config.mod}")
					a.pag_link.prev_mod(href="#" class="#{config.mod}")
			- var i = 1;
			while i <= config.pages
				if i == config.pages - 1
					li.pag_item(class="#{config.mod}")
						a.pag_link.dots_mod(class="#{config.mod}") &hellip;
					li.pag_item(class="#{config.mod}")
						a.pag_link(href="#" title="#{i}" class="#{config.mod}") #{i}
				else if i == config.active
					li.pag_item(class="#{config.mod}")
						a.pag_link.active_mod(title="#{i}" class="#{config.mod}") #{i}
				else
					li.pag_item(class="#{config.mod}")
						a.pag_link(href="#" title="#{i}" class="#{config.mod}") #{i}
				-i++
			if config.arrows
				li.pag_item.next_mod
					a.pag_link.next_mod(href="#" class="#{config.mod}")

//- works
mixin pagination_2(config)
	- config.mod = config.mod || ''
	- config.active = config.active || 1
	.pag_block(class= config.mod)
		ul.pag_list(class= config.mod)
			if config.arrows
				li.pag_item.prev_mod(class= config.mod)
					a.pag_link.prev_mod(href='#' class= config.mod)
			each page, index in config.pages
				if index == config.pages.length - 1
					li.pag_item(class= config.mod)
						a.pag_link.dots_mod(href='#' class= config.mod) &hellip;
					li.pag_item(class= config.mod)
						a.pag_link(href='#' title= i class= config.mod)= page
				else
					li.pag_item(class= config.mod)
						a.pag_link(href='#' title= i class=config.mod)= page
			if config.arrows
				li.pag_item.next_mod
					a.pag_link.next_mod(href='#' class= config.mod)

//- works
mixin list(array, mod)
	ul(class=`${mod}_list`)
		each item in array
			li(class=`${mod}_item`)= item

//- works
mixin span_list(array, mod)
	ul(class=`${mod}_list`)
		each item in array
			li(class=`${mod}_item`)
				span(class=`${mod}_text`)= item

//- works
mixin link_list(array, mod)
	ul(class=`${mod}_list`)
		each item in array
			li(class=`${mod}_item`)
				a(class=`${mod}_link` href='#')= item
